{"version":3,"sources":["utils.js","tooltip.js","slider.js","chart.js","data.js","app.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["CIRCLE_RADIUS","toDate","timestamp","shortMonths","date","Date","getMonth","getDate","isOver","mouse","x","length","dWidth","width","Math","abs","line","ctx","coords","color","beginPath","lineWidth","strokeStyle","y","lineTo","stroke","closePath","circle","fillStyle","arc","PI","fill","boundaries","columns","types","min","max","forEach","col","i","css","el","styles","Object","assign","style","toCoords","xRatio","yRatio","map","floor","DPI_HEIGHT","PADDING","filter","_","template","data","title","items","item","value","name","join","tooltip","clear","innerHTML","show","left","top","getBoundingClientRect","height","display","insertAdjacentHTML","hide","HEIGHT","sliderChart","root","DPI_WIDTH","WIDTH","canvas","querySelector","getContext","yMin","yMax","VIEW_HEIGHT","VIEW_WIDTH","yData","xData","idx","colors","proxy","ROWS_COUNT","chart","tip","slider","raf","Proxy","set","result","Reflect","requestAnimationFrame","paint","mousemove","clientX","clientY","mouseleave","addEventListener","clearRect","yAxis","xAxis","colsCount","step","round","text","fillText","toString","save","moveTo","restore","names","textStep","font","init","destroy","cancelAnimationFrame","removeEventListener","getChartData","y0","y1","tgChart","document","getElementById","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module"],"mappings":"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oVI,EAAE,MGrVb,CAAgBsB,GDClB,GAAwB,MCDtB,CAA6BR,OAA7B,EAAsCD,IAAI,CAACU,QNLbrG,GMK9B,CNLkC,CAACC,KADpB,4DAGTD,IAAI,CAACE,KAAL,CACCT,GADD,CACK,UAACU,IAAD,EAAU;AKIrB,ACDD,AJPD,AC4VYoE,AHvVF,MGuVEA,EAAE,EAAE,MADD,qFHrV8BpE,IAAI,CAACxC,KADxC,gBACkDwC,IAAI,CAACC,KADvD,kEAEkCD,IAAI,CAACxC,KAFvC,gBAEiDwC,IAAI,CAACE,IAFtD;AKIR,AFoVUmE,AHpVH,GAND,EAOClE,CKDH,AFoVMkE,EAAE,CH1VN,CG0VQ,AHnVF,IAPN,CAHS,CG2VF;AEjVX,ACDJ,AJRA,AC6VYtH,AH9VK,CAAjB,GMSIoJ,EHqVQpJ,CAAC,EAAE,CEpVL,IAAI6H,ACDA,GAAG,EDCP,EAAN,ACDJ;ADEG,AFgVY,GElVb,CAEE,CFZQ,MEYDC,GAAP,EAAY;AACZ,ACFJ,AHsVQjB,AHlVD,IGkVCA,IEpVAkB,CCFCsB,AHsVI,AHlVGhG,EGkVD,IEpVA,CLER,CAAiBtB,CKFN,ACFlB,CDEmB,ALEZ,EMJc,ANIO,GKFJ+F,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,AHsVUZ,AHlVV,MMJI+B,AHsVM/B,AHlVJ/D,EGkVM,EAAE,CHlVH,GGiVE,AHjVC,EMJd,EAAgB,KNIVA,KAAQ;AKFZ,ACDA,AHsVQgE,AHnVI,MGmVJA,EErVJS,AFqVM,EAAE,CHnVOhG,EAAE,CAACwB,CKFtB,EAAa,MLEM,GAAe,EAAtB;AKDV,ACDH,AHmVY,AHjVC,GAAd,EGhBU,QEeC2E,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,AFqVGhD,IAAAA,MAAM,EAAE;AEpVb,ACDDqE,AHsVU/B,AHrVV,EMDA+B,IHsVU/B,EAAE,CHrVL,CGqVO,EGtVJ,GAAGiC,IHqVC,MGrVS,CAAC,YAAY;AAClC,AHsVQhC,AHrVR9D,IAAAA,EGqVQ8D,EGtVJiC,AHsVM,AHtVL,EGsVO,GGtVH,GAAG/B,QAAQ,CAACgC,KNCD1G,IADf,EACqB,KMDd,CAA0B,wBAA1B,CAAZ;ADEF,AFkVc,AHnVc,SKCrB,CLDEW,EKCT,ELD4B,QAAnBA,IAAmB;AKE7B,ACFG,AHlBQ,AFCZ,ADiB8B,GGlBnB,CFCLO,CEwWG,CAzWE,CAAP,EGkBK,CLjBG,ADiBKN,GMAJ7B,ALjBE,ADiBe,CMAhB,CLjBd,EKiBiB,CAAb,EAAgBA,CAAC,ANAJ6B,GMAO6F,ANAM,KMAD,CAACtJ,MAA1B,EAAkC4B,CAAC,EAAnC,EAAuC;AACrC,AHuVL,AFxWD,IAAMY,MKiBI6F,ILjBM,EKiBA,CAACJ,ALjBElE,MAAM,GAAG,CKiBlB,ALjBV,CKiB4BuF,KAAK,CAAC1H,CAAD,CAAL,CAASiH,IAA3B,MAAqCR,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,ANDF,QMCEA,CDECN,SCFS,CDElB,ACFmBqB,CDECpB,GAApB,CCFwB,CDEC,ACFAtG,CAAD,CAAN,CAAV,MNDwBE,EAAE,CAAC4B,qBAAH,EAA1B;AKIJ,ACFK,ALjBA,ADeD,SKIG,AJnBOM,CImBN,ALJIL,KKICuE,CLJT,EKIG,EAAWC,AJnBb,CAAqBlE,IAArB,EImBE,AJnByBpB,CImBN,GJnBrB,EAAiCqB,QDe1BP,CCfP,EAA4C,GDe7C,6DKIG,EAAqG,IAArG,IAA6G,GAApH;AACD,ACFI,ALjBD,ADcE,ADpBN,IAAMtE,EEMI8E,IDcYjE,CCdP,GAAGgE,CDcZ,EDpBa,GAAG,CAAtB,EEM2B,GAAG,CAA1B,aDckBhE,KAAhB;ACbF,MAAMkE,MAAM,GAAGH,IAAI,CAACI,aAAL,CAAmB,QAAnB,CAAf;AIoBJ+D,ACFIe,AJpBJ,ADGI/E,ADaEf,ADnBC,EEMHe,EKiBA+E,AJpBEhF,EFgBAd,CKMC,CAACsE,AJnBE,CCHC,ADGAzH,AFNKZ,ECmBL,CEhBG,EIoBA,ALjBV,CCHJ,AHHO,CAAgBC,COuBN,ALjBE2E,GImBnB,CCFI,EDEmBwD,ENzBhB,CEMH,CFN8B,cMyBlC;AACAU,ACFG,AJpBH,ADGIhE,ADaE,ADnBF,EEMAA,CKQqB,CJXnBL,CIoBD,CPvBKvE,CMyBH,ACXkB,CDWjByI,ACXN,ALRQ,CAACtE,CCHC,GAAG,EDGX,CCHJ,CHHqB,CMyBrB,AJnBoBnB,EFNI,CMyBHyF,ANxBb,CCkBEnG,EAAJ,EAAQ,ADnBU,EEMpB,AFJI,GMuBR,ENzBwB,EAGhB,KAHgB,EAIhB,KAJgB,EAKhB,KALgB,EAMhB,KANgB,EAOhB,KAPgB,EAQhB,KARgB,EAShB,KATgB,EAUhB,KAVgB,EAWhB,KAXgB,EAYhB,KAZgB,CAApB;AOwBH,AJpBD,ADGI,ADaI8B,ADNJ,IGVEnB,EDGInC,AFOAb,ECMFmE,CCbK,CFOC,CGVD,CDGGQ,CFOC,CGVD,CFgBD,CEhBf,CFgBiB,ADNI1E,CEPC,CAAC4E,EFON,CAAS/E,ECKZ,KCZE,CAAkB,CFOjB,CAAb,EEPY,CAAZ;ACFJ,ADGI,ADaIkE,ADNJ,IGVES,IFgBET,GAAG,EEhBI,AFgBFA,GEhBKU,AFgBF,ECbRC,CDaWT,ADNLnE,EGVS,GAAG,ADGtB,CCHJ,AFgBa,CCbG,EDaY,EDNH,CAACC,CCIZ,GDJgB,CAACE,QAAL,EAAD,CAArB,cAA0CF,IAAI,CAACG,OAAL,EAA1C;AOWJ4J,AJpBA,ADGQtJ,ADaAsD,ADNP,IGVKhB,ADGEtC,EKiBF,CAACkI,CNJC5E,CCbK,EAAEW,CDaH,EMIZ,AJpBgB,AFgBFX,ECbM,CKiBH4F,AJpBErF,CFgBD,CCbK,EDaF7D,EEhBI,ADET,GKkBhB,AJpB4B,AFgBF,CEhB1B,EFgB6B,CAAf,GAAmB;AEfjC,ADGQyD,ADSM,IEZRc,ADGEd,GDSF,GCTQ,EAAEI,GCHC,GAAGvB,ADGE,GAAG,OCHK,GAAGC,OAAO,GAAG,CAA3C;AACA,ADAgB,ADgBVX,ADNC,GEVH,CCAE4C,EFgBA5C,EAAE,CAAC+B,ADNOhE,KGVA,CHUT,CAAgBC,CGVJoE,IHUZ,EAAuBnE,CAAvB,EGVP,AHUiCC,CCM3B,CAAsB,IDNrB,EAAkCC,MCMnC,ADNC,ECMmC2C,ADNO,QCMC,CAACC,IAAD,CAA5C;AEfN,AFgBK,ADND,IGVEmC,CFMG,CDID,CAAClF,KAAL,EGVY,AHUA,GGVG,CAAnB,GHUuB,KAAP;AENZ,ADaAgE,ADLA,ICKAA,EDLM5D,ECND,GDMM,GAAGD,MERO,AFQD,GAAGD,GCKhB,GDLP,cERgC6C,IAAX,CAArB;ACDG,ADCH,ADcE,ADJF,SGXYoC,AHWL9E,IAAI,CGXR,AHWSC,CGXM6D,EHWX,CAASlE,CGXb,AHWc,EGXO8C,CFelBf,ADJchC,ECIlB,CEfC,CFeO,CEfoB,AHWL,CAACC,CAAnB,IAAwBG,KAAK,GAAG,CAAvC;AGVA,ADAA,ADcY0D,ADHf,MGXSQ,ADACG,EDcKX,ECdZ,ECAY,GAAGK,AFcI,EAAE,EEdF,CAACI,aAAL,CAAmB,kBAAnB,CAAf;AACA,ADDA,ADcU,MEbJa,ADDOV,CDcX,EEbO,CDDT,ECCY,sBAAQP,IAAI,CAACI,aAAL,CAAmB,qBAAnB,CAAR,CAAZ;AACA,AFaC,ADFE,MGXGc,GHWM9E,GGXA,CHWT,CAAcC,CGXF,EHWZ,EAAmBC,MAAnB,QAAsC,OGXd0D,IAAI,CAACI,aAAL,CAAmB,oBAAnB,CAAZ,EAAsDxB,IAAtD,EAA4DqB,SAA5D,CAAf;AACA,ADFA,ADCK,ADWoC,GCX3C,GECQ5D,ADFA+B,AFY0B7B,GGVvB,EHUgC,CGV7B4D,ADFA,GAAGK,GCEG,CAACH,AHUa9D,KAAS,EEZf,GCEd,CAAkB,ADFAgE,ICElB,ADFsB,CCElC,EDFqCD,IAAX,CAA1B;ACGA,ADFA,ADeH,ADHGjE,EAAAA,GAAG,CGVC8E,ADFEhD,AFYF3B,GGVJ,GDFY,GAAGiE,AFYf,UEZyB,IAAI7B,IAAI,CAACvB,OAAL,CAAa,CAAb,EAAgBtB,MAAhB,GAAyB,CAA7B,CAAzB;ACIAoE,ADFA,AFWA9D,EGTA8D,AHSA9D,GAAG,CEXGqE,AFWFjE,EGTE,CAACR,EDFI,GCEX,ADFc2C,CFWd,EGTeqB,CDFG,AFWF,CEXG5C,AFWnB,OGTA,ADFc,CAAaoB,MAAb,CAAoB,UAAAf,GAAG;ACGrCyC,ADHqC,AFYrC9D,EGTA8D,AHSA9D,GAAG,CAACK,EGTE,CAACgD,EDHkCd,ICGzC,ADH6C,CAACtB,CFY9C,CGTgBiB,EHSEhC,CEZuB,CAAWmB,GAAG,AFYvD,CEZwD,CAAD,CCGvD,ADHyC,MAAuB,MAA3B;ACKrC,ADLqC,GAAvB,CAAd,cCKIyC,MAAJ,EAAY;AACRlE,ADLJ,AFQyC,IGHrCA,EDLE0E,GCKG,EAAET,ADLA,GAAGtB,ECKE,EDLE,CCKC,ADLAvB,ICIP,GDJE,CAAaoB,MAAb,CAAoB,UAAAf,CFYbpB,EEZgB,IFQI;AGFrCoD,ADNiC,AFQI,IGFrCA,MAAM,CDN+Bd,CCM7BkB,GDNiC,CAACxC,ECM5B,GAAG,ADNoB,CAAWI,GAAG,CAAC,CAAD,CAAd,MAAuB,MAA3B;ACIzB,ADJyB,GCIrC,ADJc,EAA0D,CAA1D,CAAd;ACSA,ADPAgD,AFMyC,EENzCA,ICOMI,CDPD,CAACzC,GCOK,ADPX,CAAUH,ECOI,IAAIkD,EDPA,CAACjD,ECOL,CAAU,EAAV,CDPI,CCOU,CDPDC,MAAT,CAAlB,EAAoCX,OAApC,CAA4C,UAACnB,MAAD,EAASsE,GAAT,EAAiB;ACQzDS,ADPA,AFSJ,IGFIA,GADwB,CDNlB9E,KAAK,GAAGqC,IAAI,CAACiC,GCON,GDPC,CAAYH,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAZ,CAAd,cFSyB;AGDrB,ADPJ,AFQyB,UGDfU,MAAM,GAAGC,EDPdlF,GAAL,ECO0B,ADPhBC,CCOiB+E,GAAR,EDPnB,EAAkB,GCOCE,OAAO,YAAtB;AACAJ,ADRgB5E,AFQK,MGArB4E,ADRgB5E,GCQb,CHACT,CERiB,AFQA,CGAf0F,CDRUjF,oBCQW,CAACkF,KAAD,CAA3B;AACA,ADTc,AFQO,KERzB,KFQW9E,CAAc,EGCd2E,MAAP;AACH;AALuB,ADPiC,AFWzDjF,GGJU,CAAd,EHIIA,GAAG,CAACO,MAAJ,CAAWd,CAAX,EAAca,CAAd,0BEPqBL,MAJoC;AAAA,AFY5D;AGGD,AHTyC,WGShCoF,SAAT,OAAyC;AAAA,ADfoB,AFMpB,QGSpBC,OAAoB,QAApBA,OAAoB;AAAA,ADXrC,AFEqC,QGSXC,OAAW,QAAXA,OAAW,4BDXR;AAAA,AFEQ;AGUrC,ADZ6B,AFEQ,YEFzB9F,CAAiB,mBCYPqE,MAAM,CAACV,qBAAP,EAAtB;AAAA,ADZ6B,QCYrBF,IAAR,ADZe5C,CAAc,wBCYrB4C,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","file":"app.c328ef1a.js","sourceRoot":"..\\src","sourcesContent":["const CIRCLE_RADIUS = 8\r\n\r\nexport function toDate(timestamp) {\r\n    const shortMonths = [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n    ]\r\n    const date = new Date(timestamp)\r\n    return `${shortMonths[date.getMonth()]} ${date.getDate()}`\r\n}\r\n\r\nexport function isOver(mouse, x, length, dWidth) {\r\n    if (!mouse) return false\r\n\r\n    const width = dWidth / length\r\n\r\n    return Math.abs(x - mouse.x) < width / 2\r\n}\r\n\r\nexport function line(ctx, coords, { color }) {\r\n    ctx.beginPath()\r\n    ctx.lineWidth = 4\r\n    ctx.strokeStyle = color\r\n    for (const [x, y] of coords) {\r\n        ctx.lineTo(x, y)\r\n    }\r\n    ctx.stroke()\r\n    ctx.closePath();\r\n}\r\n\r\nexport function circle(ctx, [x, y], color) {\r\n    ctx.beginPath()\r\n    ctx.strokeStyle = color\r\n    ctx.fillStyle = '#fff'\r\n    ctx.arc(x, y, CIRCLE_RADIUS, 0, Math.PI * 2)\r\n    ctx.fill()\r\n    ctx.stroke()\r\n    ctx.closePath()\r\n}\r\n\r\nexport function boundaries({ columns, types }) {\r\n    let min\r\n    let max\r\n\r\n    columns.forEach(col => {\r\n        if (types[col[0]] !== 'line') {\r\n            return\r\n        }\r\n\r\n        if (typeof min !== 'number') min = col[1]\r\n        if (typeof max !== 'number') max = col[1]\r\n\r\n        if (min > col[1]) min = col[1]\r\n        if (max < col[1]) max = col[1]\r\n        for (let i = 2; i < col.length; i++) {\r\n            if (min > col[i]) min = col[i]\r\n            if (max < col[i]) max = col[i]\r\n        }\r\n\r\n    });\r\n\r\n    return [min, max]\r\n}\r\n\r\nexport function css(el, styles = {}) {\r\n    Object.assign(el.style, styles)\r\n}\r\n\r\nexport function toCoords(xRatio, yRatio) {\r\n    return (col) => col.map((y, i) => [\r\n        Math.floor((i - 1) * xRatio),\r\n        Math.floor(DPI_HEIGHT - PADDING - y * yRatio)\r\n    ]).filter((_, i) => i !== 0)\r\n}","import { css } from \"./utils\"\r\n\r\nconst template = (data) => `\r\n   <div class=\"tooltip-title\">${data.title}</div>\r\n    <ul class=\"tooltip-list\">\r\n      ${data.items\r\n        .map((item) => {\r\n          return `<li class=\"tooltip-list-item\">\r\n          <div class=\"value\" style=\"color: ${item.color}\">${item.value}</div>\r\n          <div class=\"name\" style=\"color: ${item.color}\">${item.name}</div>\r\n        </li>`\r\n        })\r\n        .join('\\n')}\r\n    </ul>\r\n`\r\n\r\nexport function tooltip(el) {\r\n  const clear = () => (el.innerHTML = '')\r\n  return {\r\n    show({ left, top }, data) {\r\n      const { height, width } = el.getBoundingClientRect()\r\n      clear()\r\n      css(el, {\r\n        display: 'block',\r\n        top: top - height + 'px',\r\n        left: left + width / 2 + 'px',\r\n      })\r\n      el.insertAdjacentHTML('afterbegin', template(data))\r\n    },\r\n    hide() {\r\n      css(el, { display: 'none' })\r\n    },\r\n  }\r\n}","import { css, isOver, toDate, line, circle, boundaries } from './utils'\r\n\r\nconst HEIGHT = 40\r\nconst DPI_HEIGHT = HEIGHT * 2\r\n\r\nexport function sliderChart(root, data, DPI_WIDTH) {\r\n    const WIDTH = DPI_WIDTH / 2\r\n    const canvas = root.querySelector('canvas')\r\n    canvas.width = DPI_WIDTH\r\n    canvas.height = DPI_HEIGHT\r\n    const ctx = canvas.getContext('2d');\r\n    css(canvas, {\r\n        width: WIDTH + 'px',\r\n        height: HEIGHT + 'px'\r\n    })\r\n\r\n    const [yMin, yMax] = boundaries(data)\r\n    const yRatio = VIEW_HEIGHT / (yMax - yMin)\r\n    const xRatio = VIEW_WIDTH / (data.columns[0].length - 2)\r\n\r\n    const yData = data.columns.filter(col => data.types[col[0]] === 'line')\r\n    const xData = data.columns.filter(col => data.types[col[0]] !== 'line')[0]\r\n\r\n    yData.map(toCoords(xRatio, yRatio)).forEach((coords, idx) => {\r\n        const color = data.colors[yData[idx][0]]\r\n        line(ctx, coords, { color })\r\n\r\n        for (const [x, y] of coords) {\r\n            if (isOver(proxy.mouse, x, coords.length, DPI_WIDTH)) {\r\n                circle(ctx, [x, y], color)\r\n                break\r\n            }\r\n        }\r\n    })\r\n}","import { tooltip } from './tooltip'\r\nimport { css, isOver, toDate, line, circle, boundaries } from './utils'\r\nimport { sliderChart } from './slider'\r\nimport './styles.scss'\r\n\r\nconst WIDTH = 600\r\nconst HEIGHT = 200\r\nconst PADDING = 40\r\nconst DPI_WIDTH = WIDTH * 2\r\nconst DPI_HEIGHT = HEIGHT * 2\r\nconst VIEW_HEIGHT = DPI_HEIGHT - PADDING * 2\r\nconst VIEW_WIDTH = DPI_WIDTH\r\nconst ROWS_COUNT = 5\r\n\r\n\r\nexport function chart(root, data) {\r\n    const canvas = root.querySelector('[data-el=\"main\"]')\r\n    const tip = tooltip(root.querySelector('[data-el=\"tooltip\"]'))\r\n    const slider = sliderChart(root.querySelector('[data-el=\"slider\"]'), data, DPI_WIDTH)\r\n    const ctx = canvas.getContext('2d');\r\n    let raf\r\n\r\n    canvas.width = DPI_WIDTH\r\n    canvas.height = DPI_HEIGHT\r\n\r\n    css(canvas, {\r\n        width: WIDTH + 'px',\r\n        height: HEIGHT + 'px'\r\n    })\r\n\r\n    const proxy = new Proxy({}, {\r\n        set(...args) {\r\n            const result = Reflect.set(...args)\r\n            raf = requestAnimationFrame(paint)\r\n            return result\r\n        }\r\n    })\r\n\r\n    function mousemove({ clientX, clientY }) {\r\n        const { left, top } = canvas.getBoundingClientRect()\r\n        proxy.mouse = {\r\n            x: (clientX - left) * 2,\r\n            tooltip: {\r\n                left: clientX - left,\r\n                top: clientY - top,\r\n            }\r\n        }\r\n    }\r\n\r\n    function mouseleave() {\r\n        proxy.mouse = null\r\n        tip.hide()\r\n    }\r\n\r\n    canvas.addEventListener('mousemove', mousemove)\r\n    canvas.addEventListener('mouseleave', mouseleave)\r\n\r\n    function clear() {\r\n        ctx.clearRect(0, 0, DPI_WIDTH, DPI_HEIGHT)\r\n    }\r\n\r\n    function paint() {\r\n        clear()\r\n        const [yMin, yMax] = boundaries(data)\r\n        const yRatio = VIEW_HEIGHT / (yMax - yMin)\r\n        const xRatio = VIEW_WIDTH / (data.columns[0].length - 2)\r\n\r\n        const yData = data.columns.filter(col => data.types[col[0]] === 'line')\r\n        const xData = data.columns.filter(col => data.types[col[0]] !== 'line')[0]\r\n\r\n        yAxis(yMin, yMax)\r\n        xAxis(xData, yData, xRatio)\r\n\r\n        yData.map(toCoords(xRatio, yRatio)).forEach((coords, idx) => {\r\n            const color = data.colors[yData[idx][0]]\r\n            line(ctx, coords, { color })\r\n\r\n            for (const [x, y] of coords) {\r\n                if (isOver(proxy.mouse, x, coords.length, DPI_WIDTH)) {\r\n                    circle(ctx, [x, y], color)\r\n                    break\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function xAxis(xData, yData, xRatio) {\r\n        const colsCount = 6\r\n        const step = Math.round(xData.length / colsCount)\r\n        ctx.beginPath()\r\n        for (let i = 1; i < xData.length; i++) {\r\n            const x = i * xRatio\r\n            if ((i - 1) % step === 0) {\r\n                const text = toDate(xData[i])\r\n                ctx.fillText(text.toString(), x, DPI_HEIGHT)\r\n            }\r\n\r\n            if (isOver(proxy.mouse, x, xData.length, DPI_WIDTH)) {\r\n                ctx.save()\r\n                ctx.moveTo(x, PADDING / 2)\r\n                ctx.lineTo(x, DPI_HEIGHT - PADDING)\r\n                ctx.restore()\r\n\r\n                tip.show(proxy.mouse.tooltip, {\r\n                    title: toDate(xData[i]),\r\n                    items: yData.map((col) => ({\r\n                        color: data.colors[col[0]],\r\n                        name: data.names[col[0]],\r\n                        value: col[i + 1],\r\n                    })),\r\n                })\r\n            }\r\n        }\r\n        ctx.stroke()\r\n        ctx.closePath()\r\n    }\r\n\r\n    function yAxis(yMin, yMax) {\r\n        const step = VIEW_HEIGHT / ROWS_COUNT\r\n        const textStep = (yMax - yMin) / ROWS_COUNT\r\n\r\n        ctx.beginPath()\r\n        ctx.lineWidth = 1\r\n        ctx.strokeStyle = '#bbb'\r\n        ctx.font = 'normal 20px Helvetica, sans-serif'\r\n        ctx.fillStyle = '#96a2aa'\r\n\r\n        for (let i = 1; i <= ROWS_COUNT; i++) {\r\n            const y = step * i\r\n            const text = Math.round(yMax - textStep * i)\r\n            ctx.fillText(text.toString(), 10, y + PADDING - 10)\r\n            ctx.moveTo(0, y + PADDING)\r\n            ctx.lineTo(DPI_WIDTH, y + PADDING)\r\n        }\r\n        ctx.stroke()\r\n        ctx.closePath();\r\n    }\r\n\r\n\r\n\r\n\r\n    return {\r\n        init() {\r\n            paint()\r\n        },\r\n        destroy() {\r\n            cancelAnimationFrame(raf)\r\n            canvas.removeEventListener('mousemove', mousemove)\r\n            canvas.removeEventListener('mouseleave', mouseleave)\r\n        }\r\n    }\r\n}","export function getChartData() {\n    return [{\n        columns: [\n            [\n                'x',\n                1542412800000,\n                1542499200000,\n                1542585600000,\n                1542672000000,\n                1542758400000,\n                1542844800000,\n                1542931200000,\n                1543017600000,\n                1543104000000,\n                1543190400000,\n                1543276800000,\n                1543363200000,\n                1543449600000,\n                1543536000000,\n                1543622400000,\n                1543708800000,\n                1543795200000,\n                1543881600000,\n                1543968000000,\n                1544054400000,\n                1544140800000,\n                1544227200000,\n                1544313600000,\n                1544400000000,\n                1544486400000,\n                1544572800000,\n                1544659200000,\n                1544745600000,\n                1544832000000,\n                1544918400000,\n                1545004800000,\n                1545091200000,\n                1545177600000,\n                1545264000000,\n                1545350400000,\n                1545436800000,\n                1545523200000,\n                1545609600000,\n                1545696000000,\n                1545782400000,\n                1545868800000,\n                1545955200000,\n                1546041600000,\n                1546128000000,\n                1546214400000,\n                1546300800000,\n                1546387200000,\n                1546473600000,\n                1546560000000,\n                1546646400000,\n                1546732800000,\n                1546819200000,\n                1546905600000,\n                1546992000000,\n                1547078400000,\n                1547164800000,\n                1547251200000,\n                1547337600000,\n                1547424000000,\n                1547510400000,\n                1547596800000,\n                1547683200000,\n                1547769600000,\n                1547856000000,\n                1547942400000,\n                1548028800000,\n                1548115200000,\n                1548201600000,\n                1548288000000,\n                1548374400000,\n                1548460800000,\n                1548547200000,\n                1548633600000,\n                1548720000000,\n                1548806400000,\n                1548892800000,\n                1548979200000,\n                1549065600000,\n                1549152000000,\n                1549238400000,\n                1549324800000,\n                1549411200000,\n                1549497600000,\n                1549584000000,\n                1549670400000,\n                1549756800000,\n                1549843200000,\n                1549929600000,\n                1550016000000,\n                1550102400000,\n                1550188800000,\n                1550275200000,\n                1550361600000,\n                1550448000000,\n                1550534400000,\n                1550620800000,\n                1550707200000,\n                1550793600000,\n                1550880000000,\n                1550966400000,\n                1551052800000,\n                1551139200000,\n                1551225600000,\n                1551312000000,\n                1551398400000,\n                1551484800000,\n                1551571200000,\n                1551657600000,\n                1551744000000,\n                1551830400000,\n                1551916800000,\n                1552003200000,\n            ],\n            [\n                'y0',\n                37,\n                20,\n                32,\n                39,\n                32,\n                35,\n                19,\n                65,\n                36,\n                62,\n                113,\n                69,\n                120,\n                60,\n                51,\n                49,\n                71,\n                122,\n                149,\n                69,\n                57,\n                21,\n                33,\n                55,\n                92,\n                62,\n                47,\n                50,\n                56,\n                116,\n                63,\n                60,\n                55,\n                65,\n                76,\n                33,\n                45,\n                64,\n                54,\n                81,\n                180,\n                123,\n                106,\n                37,\n                60,\n                70,\n                46,\n                68,\n                46,\n                51,\n                33,\n                57,\n                75,\n                70,\n                95,\n                70,\n                50,\n                68,\n                63,\n                66,\n                53,\n                38,\n                52,\n                109,\n                121,\n                53,\n                36,\n                71,\n                96,\n                55,\n                58,\n                29,\n                31,\n                55,\n                52,\n                44,\n                126,\n                191,\n                73,\n                87,\n                255,\n                278,\n                219,\n                170,\n                129,\n                125,\n                126,\n                84,\n                65,\n                53,\n                154,\n                57,\n                71,\n                64,\n                75,\n                72,\n                39,\n                47,\n                52,\n                73,\n                89,\n                156,\n                86,\n                105,\n                88,\n                45,\n                33,\n                56,\n                142,\n                124,\n                114,\n                64,\n            ],\n            [\n                'y1',\n                22,\n                12,\n                30,\n                40,\n                33,\n                23,\n                18,\n                41,\n                45,\n                69,\n                57,\n                61,\n                70,\n                47,\n                31,\n                34,\n                40,\n                55,\n                27,\n                57,\n                48,\n                32,\n                40,\n                49,\n                54,\n                49,\n                34,\n                51,\n                51,\n                51,\n                66,\n                51,\n                94,\n                60,\n                64,\n                28,\n                44,\n                96,\n                49,\n                73,\n                30,\n                88,\n                63,\n                42,\n                56,\n                67,\n                52,\n                67,\n                35,\n                61,\n                40,\n                55,\n                63,\n                61,\n                105,\n                59,\n                51,\n                76,\n                63,\n                57,\n                47,\n                56,\n                51,\n                98,\n                103,\n                62,\n                54,\n                104,\n                48,\n                41,\n                41,\n                37,\n                30,\n                28,\n                26,\n                37,\n                65,\n                86,\n                70,\n                81,\n                54,\n                74,\n                70,\n                50,\n                74,\n                79,\n                85,\n                62,\n                36,\n                46,\n                68,\n                43,\n                66,\n                50,\n                28,\n                66,\n                39,\n                23,\n                63,\n                74,\n                83,\n                66,\n                40,\n                60,\n                29,\n                36,\n                27,\n                54,\n                89,\n                50,\n                73,\n                52,\n            ],\n        ],\n        types: {\n            y0: 'line',\n            y1: 'line',\n            x: 'x',\n        },\n        names: {\n            y0: '#0',\n            y1: '#1',\n        },\n        colors: {\n            y0: '#3DC23F',\n            y1: '#F34C44',\n        },\n    }, ][0]\n}","import { chart } from './chart'\r\nimport { getChartData } from './data'\r\n\r\nconst tgChart = chart(document.getElementById('chart'), getChartData())\r\ntgChart.init()","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}